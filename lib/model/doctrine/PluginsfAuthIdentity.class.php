<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginsfAuthIdentity extends BasesfAuthIdentity
{
    static function createByTokenAndUser($token, sfUser $user)
    {
        $rpx = new RPX();
        $response = $rpx->call('auth_info', array('token' => $token));
        
        if ($response->stat == 'ok') {
            //Save if not found already
            if (!Doctrine::getTable('sfAuthIdentity')->findOneByUrl($response->profile->identifier)) {
                //Assign
                $identity                   = new sfAuthIdentity;
                $identity->sf_auth_user_id  = $user->getId();
                $identity->url              = $response->profile->identifier;
                $identity->provider         = $response->profile->providerName;
                
                //Save
                return $identity->save();
            }
            
            return 'Identity already exists';
        }
        
        return 'Could not retrieve user profile from partner';
    }
    
    static function deleteByIdAndUser($id, sfUser $user)
    {
        $identity = Doctrine::getTable('sfAuthIdentity')->findOneByIdUser($id, $user);
        if ($identity) {
            return $identity->delete();
        }
        
        return false;
    }
}